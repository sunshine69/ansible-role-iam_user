- name: Create new IAM Group in the list iam_groups
  iam:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    iam_type: group
    name: "{{ item.name }}"
    state: present
  register: iam_group_result
  with_items: "{{ iam_groups }}"
  when: item.state == "present"

- name: Create new IAM user in the list iam_users
  iam:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    iam_type: user
    name: "{{ item.name }}"
    groups: "{{ item.group|default(omit) }}"
    state: present
    password: "{{ item.password | default(omit) }}"
    access_key_state: "{{ item.access_key }}"
  register: iam_user_result
  with_items: "{{ iam_users }}"
  when: item.state == "present"

# Enforce that a group needs to have a policy file associated.
- name: Create and attach group policies
  iam_policy:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    iam_type: group
    iam_name: "{{ item.name }}"
    policy_name: "{{ item.name }}"
    policy_json: "{{ lookup( 'template', '{{inventory_dir}}/../variable_files/iam_policies/{{ item.name }}.json') }}"
    state: present
  with_items: "{{ iam_groups }}"
  when: item.state == "present"

# User may not need the policy file
- name: Check stat the policy files for iam user
  stat:
    path: '{{ inventory_dir }}/../variable_files/iam_policies/{{ item.name }}.json'
  with_items: "{{ iam_users }}"
  register: check_user_policy_file_name
  when: item.state == "present"

- name: Create and attach user policies
  iam_policy:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    iam_type: user
    iam_name: "{{ item.name }}"
    policy_name: "{{ item.name }}"
    policy_json: "{{ lookup( 'template', '{{inventory_dir}}/../variable_files/iam_policies/{{item.name}}.json') }}"
    state: present
  with_items: "{{ check_user_policy_file_name.results }}"
  when: item.stat is defined and item.stat.exists

- name: Create iam roles in the list iam_roles
  iam_role:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    name: "{{ item.name }}"
    state: present
    managed_policies: "{{ item.managed_policies|default(omit) }}"
    assume_role_policy_document: "{{ lookup('template', inventory_dir + '/../variable_files/iam_policies/' + item.name + '-trust-policy.json') }}"
  with_items: "{{ iam_roles }}"
  when: item.state == "present"

- name: Check stat the policy files for iam role
  stat:
    path: '{{ inventory_dir }}/../variable_files/iam_policies/{{ item.name }}.json'
  with_items: "{{ iam_roles }}"
  register: check_role_policy_file_name
  when: item.state == "present"

- name: Create and attach role policies
  iam_policy:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    iam_type: role
    iam_name: "{{ item.name }}"
    policy_name: "{{ item.name }}"
    policy_json: "{{ lookup( 'template', '{{inventory_dir}}/../variable_files/iam_policies/{{item.name}}.json') }}"
    state: present
  with_items: "{{ check_role_policy_file_name.results }}"
  when: item.stat is defined and item.stat.exists
